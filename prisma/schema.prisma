// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Permission {
  VIEW
  CREATE
  ADMIN
}

enum Subscription {
  USER
  USERBANLIST
  CONTENT
  ALT
}

model Webhook {
  id            String         @id @default(cuid())
  name          String
  url           String
  owner         String
  secret        String
  disabled      Boolean        @default(false)
  subscriptions Subscription[]
  failures      Int            @default(0)
}

model DiscordUser {
  id                String   @id
  lastKnownUsername String
  pastUsernames     String[]

  reports             UserReport[]  @relation("reports")
  createdUserReports  UserReport[]  @relation("createdReports")
  createdUserBanLists UserBanList[]
}

model ApiKey {
  id          String       @id
  key         String       @unique
  permissions Permission[]
  name        String
  owner       String
}

model UserAltList {
  id            String   @id @default(cuid())
  mainAccountId String
  alts          String[]
}

enum UserReportType {
  NORMAL
  COMPROMISED
}

model UserReport {
  id             BigInt         @id @default(autoincrement())
  user           DiscordUser    @relation("reports", fields: [userId], references: [id])
  userId         String
  moderator      DiscordUser    @relation("createdReports", fields: [moderatorId], references: [id])
  moderatorId    String
  type           UserReportType
  reason         String
  proof          String[]
  active         Boolean        @default(true)
  valid          Boolean        @default(true)
  appealed       Boolean        @default(false)
  inactiveReason String?
}

model UserBanList {
  id               String      @id @default(cuid())
  users            String[]
  moderator        DiscordUser @relation(fields: [moderatorId], references: [id])
  moderatorId      String
  reason           String
  proof            String[]
  valid            Boolean     @default(true)
  invalidateReason String?
}

enum ContentReportType {
  DOX
  PASTLIFE
  UNRELEASED
}

model ContentReport {
  id        BigInt            @id @default(autoincrement())
  reason    String?
  type      ContentReportType
  link      String
  validTill DateTime?
}
